{"version":3,"sources":["components/ContactList/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","components/Notification/Notification.module.css","components/Notification/Notification.js","redux/phonebook/phonebook-action.js","redux/phonebook/phonebook-selector.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Notification","message","className","styles","deleteContactById","createAction","addContact","onChangeFilter","getContacts","state","phoneBook","contacts","getFilter","filter","getFilteredContacts","contact","name","toLowerCase","trim","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","sameName","some","handleChange","event","target","value","formSubmit","onSubmit","evt","preventDefault","alert","id","v4","formSubmitInput_name","type","onChange","formSubmitInput_number","formSubmitButton","ContactFilter","filterTitle","filterInput","autoFocus","ContactItem","contactName","contactDeleteButton","onClick","ContactList","filteredContacts","contactList","map","contactListItem","App","length","contactsReducer","createReducer","payload","filterReducer","_","action","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65a94188.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactName\":\"ContactItem_contactName__24Hxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__4GJk6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__WHcdK\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.message}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const deleteContactById = createAction('phoneBook/deleteContactById');\r\nexport const addContact = createAction('phoneBook/addContact');\r\nexport const onChangeFilter = createAction('phoneBook/onChangeFilter');\r\n","export const getContacts = state => state.phoneBook.contacts;\r\nexport const getFilter = state => state.phoneBook.filter;\r\n\r\nexport const getFilteredContacts = state => {\r\n  const filter = getFilter(state);\r\n  const contacts = getContacts(state);\r\n\r\n  return filter\r\n    ? contacts.filter(contact =>\r\n        contact.name.toLowerCase().trim().includes(filter.toLowerCase().trim()),\r\n      )\r\n    : contacts;\r\n};\r\n","import { useState } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addContact } from '../../redux/phonebook/phonebook-action';\r\nimport { getContacts } from '../../redux/phonebook/phonebook-selector';\r\nimport { v4 } from 'uuid';\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const sameName = contacts.some(\r\n    contact => name.toLowerCase() === contact.name.toLowerCase(),\r\n  );\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    if (sameName) {\r\n      alert(`${name} already in contacts`);\r\n      return;\r\n    }\r\n    dispatch(addContact({ name, number, id: v4() }));\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={styles.formSubmit} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          className={styles.formSubmitInput_name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          className={styles.formSubmitInput_number}\r\n          type=\"number\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button className={styles.formSubmitButton} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport styles from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { onChangeFilter } from '../../redux/phonebook/phonebook-action';\r\nimport { getFilter } from '../../redux/phonebook/phonebook-selector';\r\n\r\nfunction ContactFilter() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <h3 className={styles.filterTitle}>Find contact by name</h3>\r\n      <input\r\n        className={styles.filterInput}\r\n        type=\"text\"\r\n        value={filter}\r\n        name=\"filter\"\r\n        onChange={event => dispatch(onChangeFilter(event.target.value))}\r\n        autoFocus\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactFilter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactItem.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteContactById } from '../../../redux/phonebook/phonebook-action';\r\n\r\nfunction ContactItem({ id, name, number }) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <span className={styles.contactName}>\r\n        {name}: {number}\r\n      </span>\r\n      <button\r\n        className={styles.contactDeleteButton}\r\n        onClick={() => dispatch(deleteContactById(id))}\r\n      >\r\n        Удалить\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport ContactItem from './ContactItem/ContactItem';\r\nimport styles from './ContactList.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getFilteredContacts } from '../../redux/phonebook/phonebook-selector';\r\n\r\nfunction ContactList() {\r\n  const filteredContacts = useSelector(getFilteredContacts);\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {filteredContacts.map(({ id, name, number }) => (\r\n        <li className={styles.contactListItem} key={id}>\r\n          <ContactItem id={id} name={name} number={number} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nexport default ContactList;\r\n","import Notification from './Notification/Notification';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactFilter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from '../redux/phonebook/phonebook-selector';\n\nfunction App() {\n  const contacts = useSelector(getContacts);\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {contacts.length > 0 ? (\n        <div>\n          <ContactFilter />\n          <ContactList />\n        </div>\n      ) : (\n        <Notification message=\"No number in the phone book\" />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  deleteContactById,\r\n  addContact,\r\n  onChangeFilter,\r\n} from './phonebook-action';\r\n\r\nconst initalContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\nconst contactsReducer = createReducer(initalContacts, {\r\n  [deleteContactById]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [onChangeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './phonebook/phonebook-reducer.js';\r\nimport {\r\n  persistReducer,\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware =\r\n  process.env.NODE_ENV === 'development'\r\n    ? [\r\n        ...getDefaultMiddleware({\r\n          serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n          },\r\n        }),\r\n        logger,\r\n      ]\r\n    : getDefaultMiddleware;\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phoneBook: persistReducer(contactsPersistConfig, phonebookReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { store, persistor } from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n  <PersistGate  persistor={persistor}>\n    <App />\n  </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSubmit\":\"ContactForm_formSubmit__302C9\",\"formSubmitInput\":\"ContactForm_formSubmitInput__5uoAA\",\"formSubmitButton\":\"ContactForm_formSubmitButton__1_3BY\",\"formSubmitInput_number\":\"ContactForm_formSubmitInput_number__bKW5b ContactForm_formSubmitInput__5uoAA\",\"formSubmitInput_name\":\"ContactForm_formSubmitInput_name__1KBIc ContactForm_formSubmitInput__5uoAA\"};"],"sourceRoot":""}